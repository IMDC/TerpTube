<?php

$path = "/media/storage/projects/sls/public_html";

function strip_ext($filename) {
   // strip extension and get only video name
   $fnameonly = substr($filename, 0, strrpos($filename, '.')); 
   return $fnameonly;
}

/**
 *  Uses the gd image library to overlay a play button image 
 * onto the jpg thumbnail files generated by ffmpeg 
 *
 * @param string $videoPath  the full path to the video file eg) /nuitBlancheFiles/dirname002/dirname002.mp4
 * @param string $size  the size of a video thumbnail, WxH eg) 144x112 
 */


/*
 * The following function was altered to add the thumbnail to the thumb folder
 * It was taken from the signlinkcms so for the original look there. The folder structure differed from the one in the signlinkcms folder
 * The function returns only a file name, because the calling form knows where the files will be placed ex. test.jpg
 * Freeze time is the time ffmpeg will snap the photo for the thumbnail
 */
function createThumbnail($videoPath, $thumbName, $freezeTime, $size="144x112") {
   // $videoPath is of the format "/streams/489_134141341341.flv"
   // change this to alter the default thumbnail image
	
	$default_thumbnail = "default_videothumb.png";
   
    $videoPath = escapeshellcmd($videoPath);
    $size = escapeshellcmd($size); 
    $fnameonly = strip_ext($videoPath);

    $newthumbjpg = "../uploads/comment/thumb/" . $thumbName . ".jpg";
    $tempthumbjpg = $fnameonly . 'temp.jpg';  
   
    $stringToExecuteRegular = "ffmpeg/ffmpeg -i " .  $videoPath . " -ss " . $freezeTime . " -f image2 -vframes 1 -s " . $size . " " . $tempthumbjpg; 

    $escaped_command = escapeshellcmd($stringToExecuteRegular);
   
    //echo $escaped_command;
    //$output = shell_exec($escaped_command); 
    $output = shell_exec($escaped_command);

    // make sure new JPG file exists
    if (!file_exists($tempthumbjpg)) {
    	error_log("**functions.inc.php ** No image file created for " . $videoPath . ", does ffmpeg have correct permissions and dir writeable?", 0);
       return $default_thumbnail;
    }

	// use the newly created thumbnail
	$image = imagecreatefromjpeg($tempthumbjpg);
	
	if ( !$image ) {
	      //echo '<p>no image file created, does ffmpeg have correct permissions and dir writeable?</p>';
	     error_log("**functions.inc.php ** No image file created for " . $videoPath . ", does ffmpeg have correct permissions and dir writeable?", 0);
         return $default_thumbnail;
	}

   // declare the path to our play button image
	$pathToDefImage = '../images/play_btn.png';
   
   $watermark = imagecreatefrompng($pathToDefImage);
	
	if (!$watermark) {
		error_log("**ERROR functions.inc.php** - no watermark made, check the path to the play_btn image",0);
      return $default_thumbnail;

	}
	
	imagealphablending($image, true);
	imagealphablending($watermark, true); 
	
	 // render play button .png file on top of thumb.jpg file
	 imagecopy($image, $watermark, imagesx($image)/2-22, imagesy($image)/2-22, 0, 0, imagesx($watermark), imagesy($watermark));
	
	// create new thumbnail with play button overlayed on top in the same folder
	if ( !imagejpeg($image, $newthumbjpg) ) {
      //print "**ERROR** - Error creating new thumbnail jpeg file, check directory permissions";
      error_log("**ERROR functions.inc.php** - Error creating new thumbnail jpeg file for " . $videoPath . ", check directory permissions",0);
      return $default_thumbnail;
	}
   
    unlink($tempthumbjpg);
	imagedestroy($image);
	imagedestroy($watermark);
    echo basename($newthumbjpg);
    return basename($newthumbjpg);
}


function createSignlinkThumb($videoPath, $thumbName, $freezeTime, $size="144x112")
{
  	// $videoPath is of the format "/streams/489_134141341341.flv"
  	
  	$default_thumbnail = "default_videothumb.png";

  	$videoPath = escapeshellcmd($videoPath);
  	$size = escapeshellcmd($size);
  	//$fnameonly = strip_ext(thumbName);
  	
    $newthumbjpg = '../uploads/signlink/' . $thumbName . '.jpg';
   
    $stringToExecuteRegular = "../include/ffmpeg/ffmpeg -i " .  $videoPath . " -frames " . $freezeTime . " -f image2 -vframes 1 -s " . $size . " " . $newthumbjpg; 
  	
  	$escaped_command = escapeshellcmd($stringToExecuteRegular);
  	$output = shell_exec($escaped_command);
  	
  	// use the newly created thumbnail
  	$image = imagecreatefromjpeg($newthumbjpg);
  	
  	//make sure new JPG file exists
  	if (!file_exists($newthumbjpg)) {
  		//echo returned . "<br/>";
  		return $default_thumbnail;
  	}
  	
  	if ( !$image ) {
  		error_log("**functions.inc.php ** No image file created for " . $videoPath . ", does ffmpeg have correct permissions and dir writeable?", 0);
  		return $default_thumbnail;
  	}
  	
  	imagedestroy($image);
  	return basename($newthumbjpg);
  }




?>
